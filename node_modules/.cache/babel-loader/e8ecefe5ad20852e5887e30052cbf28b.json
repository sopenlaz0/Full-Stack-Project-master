{"remainingRequest":"C:\\Users\\osoph\\Desktop\\Full-Stack-Project-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\osoph\\Desktop\\Full-Stack-Project-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\osoph\\Desktop\\Full-Stack-Project-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\osoph\\Desktop\\Full-Stack-Project-master\\src\\views\\Tasks.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\osoph\\Desktop\\Full-Stack-Project-master\\src\\views\\Tasks.vue","mtime":1601550037000},{"path":"C:\\Users\\osoph\\Desktop\\Full-Stack-Project-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1601550037000},{"path":"C:\\Users\\osoph\\Desktop\\Full-Stack-Project-master\\node_modules\\babel-loader\\lib\\index.js","mtime":1601550037000},{"path":"C:\\Users\\osoph\\Desktop\\Full-Stack-Project-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1601550037000},{"path":"C:\\Users\\osoph\\Desktop\\Full-Stack-Project-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1601550037000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgYXBpIH0gZnJvbSAnLi4vaGVscGVycy9oZWxwZXJzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICd0YXNrcycsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRhc2tzOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIG9uRGVzdHJveTogZnVuY3Rpb24gb25EZXN0cm95KGlkKSB7CiAgICAgIHZhciBzdXJlLCBuZXd0YXNrczsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hc3luYyhmdW5jdGlvbiBvbkRlc3Ryb3kkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIHN1cmUgPSB3aW5kb3cuY29uZmlybSgnQXJlIHlvdSBzdXJlPycpOwoKICAgICAgICAgICAgICBpZiAoc3VyZSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUuYXdyYXAoYXBpLmRlbGV0ZXRhc2soaWQpKTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICB0aGlzLmZsYXNoKCd0YXNrIGRlbGV0ZWQgc3VjZXNzZnVsbHkhJywgJ3N1Y2Nlc3MnKTsKICAgICAgICAgICAgICBuZXd0YXNrcyA9IHRoaXMudGFza3MuZmlsdGVyKGZ1bmN0aW9uICh0YXNrKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdGFzay5faWQgIT09IGlkOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIHRoaXMudGFza3MgPSBuZXd0YXNrczsKCiAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgbnVsbCwgdGhpcyk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS5hc3luYyhmdW5jdGlvbiBtb3VudGVkJChfY29udGV4dDIpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKGFwaS5nZXR0YXNrcygpKTsKCiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIHRoaXMudGFza3MgPSBfY29udGV4dDIuc2VudDsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIG51bGwsIHRoaXMpOwogIH0KfTs="},{"version":3,"sources":["Tasks.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,SAAA,GAAA,QAAA,oBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,qBACA,EADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,cAAA,IAFA,GAEA,MAAA,CAAA,OAAA,CAAA,eAAA,CAFA;;AAAA,kBAGA,IAHA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,8CAIA,GAAA,CAAA,UAAA,CAAA,EAAA,CAJA;;AAAA;AAKA,mBAAA,KAAA,CAAA,2BAAA,EAAA,SAAA;AACA,cAAA,QANA,GAMA,KAAA,KAAA,CAAA,MAAA,CAAA,UAAA,IAAA;AAAA,uBAAA,IAAA,CAAA,GAAA,KAAA,EAAA;AAAA,eAAA,CANA;AAOA,mBAAA,KAAA,GAAA,QAAA;;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAPA;AAiBA,EAAA,OAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAkBA,GAAA,CAAA,QAAA,EAlBA;;AAAA;AAkBA,iBAAA,KAlBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAA","sourcesContent":["<template>\n  <div>\n    <h1>RemindUS</h1>\n    <table id=\"tasks\" class=\"ui celled compact table\">\n      <thead>\n        <tr>\n         <th style=\"background-color:#00ffff;\">  <i class=\"calendar plus icon\"></i>Task</th>\n          <th style=\"background-color:#00ffff\"> <i class=\"info circle icon\"></i>Detail</th>\n                    <th style=\"background-color:#00ffff\"> <i class=\"lock open icon\"></i></th>\n                   <th style=\"background-color:#00ffff\"> <i class=\"edit icon\"></i></th>\n                    <th style=\"background-color:#00ffff\"> <i class=\"trash icon\"></i></th>\n \n\n\n          <!-- <th colspan=\"3\"></th> -->\n        </tr>\n      </thead>\n      <tr v-for=\"(task, i) in tasks\" :key=\"i\">\n        <td>{{ task.task1 }}</td>\n        <td>{{ task.task2 }}</td>\n        <td width=\"75\" class=\"center aligned\">\n          <router-link :to=\"{ name: 'show', params: { id: task._id }}\">Show</router-link>\n        </td>\n        <td width=\"75\" class=\"center aligned\">\n          <router-link :to=\"{ name: 'edit', params: { id: task._id }}\">Edit</router-link>\n        </td>\n        <td width=\"75\" class=\"center aligned\" @click.prevent=\"onDestroy(task._id)\">\n          <a :href=\"`/tasks/${task._id}`\">Delete</a>\n        </td>\n      </tr>\n    </table>\n  </div>\n</template>\n\n<script>\nimport { api } from '../helpers/helpers';\nexport default {\n  name: 'tasks',\n  data() {\n    return {\n      tasks: []\n    };\n  },\n  methods: {\n    async onDestroy(id) {\n      const sure = window.confirm('Are you sure?');\n      if (!sure) return;\n      await api.deletetask(id);\n      this.flash('task deleted sucessfully!', 'success');\n      const newtasks = this.tasks.filter(task => task._id !== id);\n      this.tasks = newtasks;\n    }\n  },\n  async mounted() {\n    this.tasks = await api.gettasks();\n  }\n};\n</script>\n<style scoped>\n  td{background-color:#00ffff;}\n</style>"],"sourceRoot":"src/views"}]}