{"remainingRequest":"C:\\Users\\osoph\\Desktop\\Full-Stack-Project-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\osoph\\Desktop\\Full-Stack-Project-master\\src\\views\\Tasks.vue?vue&type=style&index=0&id=5f49cac4&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\osoph\\Desktop\\Full-Stack-Project-master\\src\\views\\Tasks.vue","mtime":1601550037000},{"path":"C:\\Users\\osoph\\Desktop\\Full-Stack-Project-master\\node_modules\\css-loader\\dist\\cjs.js","mtime":1601550037000},{"path":"C:\\Users\\osoph\\Desktop\\Full-Stack-Project-master\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1601550037000},{"path":"C:\\Users\\osoph\\Desktop\\Full-Stack-Project-master\\node_modules\\postcss-loader\\src\\index.js","mtime":1601550037000},{"path":"C:\\Users\\osoph\\Desktop\\Full-Stack-Project-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1601550037000},{"path":"C:\\Users\\osoph\\Desktop\\Full-Stack-Project-master\\node_modules\\vue-loader\\lib\\index.js","mtime":1601550037000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgp0ZHtiYWNrZ3JvdW5kLWNvbG9yOiMwMGZmZmY7fQo="},{"version":3,"sources":["Tasks.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA","file":"Tasks.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <h1>RemindUS</h1>\n    <table id=\"tasks\" class=\"ui celled compact table\">\n      <thead>\n        <tr>\n         <th style=\"background-color:#00ffff;\">  <i class=\"calendar plus icon\"></i>Task</th>\n          <th style=\"background-color:#00ffff\"> <i class=\"info circle icon\"></i>Detail</th>\n                    <th style=\"background-color:#00ffff\"> <i class=\"lock open icon\"></i></th>\n                   <th style=\"background-color:#00ffff\"> <i class=\"edit icon\"></i></th>\n                    <th style=\"background-color:#00ffff\"> <i class=\"trash icon\"></i></th>\n \n\n\n          <!-- <th colspan=\"3\"></th> -->\n        </tr>\n      </thead>\n      <tr v-for=\"(task, i) in tasks\" :key=\"i\">\n        <td>{{ task.task1 }}</td>\n        <td>{{ task.task2 }}</td>\n        <td width=\"75\" class=\"center aligned\">\n          <router-link :to=\"{ name: 'show', params: { id: task._id }}\">Show</router-link>\n        </td>\n        <td width=\"75\" class=\"center aligned\">\n          <router-link :to=\"{ name: 'edit', params: { id: task._id }}\">Edit</router-link>\n        </td>\n        <td width=\"75\" class=\"center aligned\" @click.prevent=\"onDestroy(task._id)\">\n          <a :href=\"`/tasks/${task._id}`\">Delete</a>\n        </td>\n      </tr>\n    </table>\n  </div>\n</template>\n\n<script>\nimport { api } from '../helpers/helpers';\nexport default {\n  name: 'tasks',\n  data() {\n    return {\n      tasks: []\n    };\n  },\n  methods: {\n    async onDestroy(id) {\n      const sure = window.confirm('Are you sure?');\n      if (!sure) return;\n      await api.deletetask(id);\n      this.flash('task deleted sucessfully!', 'success');\n      const newtasks = this.tasks.filter(task => task._id !== id);\n      this.tasks = newtasks;\n    }\n  },\n  async mounted() {\n    this.tasks = await api.gettasks();\n  }\n};\n</script>\n<style scoped>\n  td{background-color:#00ffff;}\n</style>"]}]}